// <auto-generated />
using System;
using Gas_Boiler_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gas_Boiler_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005211355_AdminUserSeed")]
    partial class AdminUserSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gas_Boiler_Backend.Models.Alarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlarmType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GasBoilerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasBoilerId");

                    b.ToTable("Alarms");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.BuildingObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CeilingArea")
                        .HasColumnType("float");

                    b.Property<double>("CeilingUValue")
                        .HasColumnType("float");

                    b.Property<double>("DesiredTemperature")
                        .HasColumnType("float");

                    b.Property<double>("FloorArea")
                        .HasColumnType("float");

                    b.Property<double>("FloorUValue")
                        .HasColumnType("float");

                    b.Property<int>("GasBoilerId")
                        .HasColumnType("int");

                    b.Property<double>("HeatingArea")
                        .HasColumnType("float");

                    b.Property<double>("WallArea")
                        .HasColumnType("float");

                    b.Property<double>("WallUValue")
                        .HasColumnType("float");

                    b.Property<double>("WindowArea")
                        .HasColumnType("float");

                    b.Property<double>("WindowUValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GasBoilerId")
                        .IsUnique();

                    b.ToTable("BuildingObjects");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.GasBoiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentPower")
                        .HasColumnType("float");

                    b.Property<double>("Efficiency")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("MaxPower")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GasBoilers");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.HistoricalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("GasBoilerId")
                        .HasColumnType("int");

                    b.Property<double>("GasConsumption")
                        .HasColumnType("float");

                    b.Property<double>("InsideTemperature")
                        .HasColumnType("float");

                    b.Property<double>("OutsideTemperature")
                        .HasColumnType("float");

                    b.Property<double>("PowerOutput")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasBoilerId");

                    b.ToTable("HistoricalData");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.SystemParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SystemParameters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Average ground temperature",
                            ParameterName = "GroundTemperature",
                            Unit = "°C",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Price of natural gas per kWh",
                            ParameterName = "GasPricePerKWh",
                            Unit = "RSD/kWh",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = 5.5
                        });
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$12$xYluxINGkkohipBPd/xZLe2cJl2Y7dSomJAu5WT8MJRkd8u6J6nJW",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.Alarm", b =>
                {
                    b.HasOne("Gas_Boiler_Backend.Models.GasBoiler", "GasBoiler")
                        .WithMany("Alarms")
                        .HasForeignKey("GasBoilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasBoiler");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.BuildingObject", b =>
                {
                    b.HasOne("Gas_Boiler_Backend.Models.GasBoiler", "GasBoiler")
                        .WithOne("BuildingObject")
                        .HasForeignKey("Gas_Boiler_Backend.Models.BuildingObject", "GasBoilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasBoiler");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.GasBoiler", b =>
                {
                    b.HasOne("Gas_Boiler_Backend.Models.User", "User")
                        .WithMany("GasBoilers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.HistoricalData", b =>
                {
                    b.HasOne("Gas_Boiler_Backend.Models.GasBoiler", "GasBoiler")
                        .WithMany("HistoricalData")
                        .HasForeignKey("GasBoilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasBoiler");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.GasBoiler", b =>
                {
                    b.Navigation("Alarms");

                    b.Navigation("BuildingObject");

                    b.Navigation("HistoricalData");
                });

            modelBuilder.Entity("Gas_Boiler_Backend.Models.User", b =>
                {
                    b.Navigation("GasBoilers");
                });
#pragma warning restore 612, 618
        }
    }
}
